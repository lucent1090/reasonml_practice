// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as Caml_int32 from "bs-platform/lib/es6/caml_int32.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Utils$SimpleDeck from "./Utils.bs.js";

var rangeOptions = /* array */[
  /* record */[
    /* type_ : Today */0,
    /* label */"Today"
  ],
  /* record */[
    /* type_ : Yesterday */1,
    /* label */"Yesterday"
  ],
  /* record */[
    /* type_ : MTD */2,
    /* label */"MTD"
  ],
  /* record */[
    /* type_ : Customer */3,
    /* label */"Customer Duration"
  ]
];

function onClick(_, $staropt$star, $staropt$star$1) {
  var currentRange = $staropt$star ? $staropt$star[0] : /* record */[
      /* type_ : Today */0,
      /* label */""
    ];
  var nextRange = $staropt$star$1 ? $staropt$star$1[0] : (function () {
        return /* () */0;
      });
  var currentRangeIndex = rangeOptions.findIndex((function (rangeOption) {
          return rangeOption[/* type_ */0] === currentRange[/* type_ */0];
        }));
  var nextRangeIndex = Caml_int32.mod_(currentRangeIndex + 1 | 0, rangeOptions.length);
  return Curry._1(nextRange, Caml_array.caml_array_get(rangeOptions, nextRangeIndex));
}

var component = ReasonReact.statelessComponent("RotatableButton");

function make($staropt$star, $staropt$star$1, _) {
  var rangeOption = $staropt$star ? $staropt$star[0] : /* record */[
      /* type_ : Today */0,
      /* label */""
    ];
  var nextRange = $staropt$star$1 ? $staropt$star$1[0] : (function () {
        return /* () */0;
      });
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          onClick: (function (_event) {
                              return onClick(_event, /* Some */[rangeOption], /* Some */[nextRange]);
                            })
                        }, Utils$SimpleDeck.strEl(rangeOption[/* label */1]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var RotatableButton = /* module */[
  /* rangeOptions */rangeOptions,
  /* onClick */onClick,
  /* component */component,
  /* make */make
];

var component$1 = ReasonReact.reducerComponent("App");

function make$1() {
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */component$1[/* didMount */4],
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              return React.createElement("div", undefined, Utils$SimpleDeck.strEl("test"), ReasonReact.element(/* None */0, /* None */0, make(/* Some */[param[/* state */1][/* button1 */0]], /* Some */[(function (option) {
                                      return Curry._1(send, /* UpdateButton1 */[option]);
                                    })], /* array */[])));
            }),
          /* initialState */(function () {
              return /* record */[/* button1 : record */[
                        /* type_ : Today */0,
                        /* label */"Today"
                      ]];
            }),
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [/* record */[/* button1 */action[0]]]);
            }),
          /* subscriptions */component$1[/* subscriptions */13],
          /* jsElementWrapped */component$1[/* jsElementWrapped */14]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component$1, (function () {
        return make$1(/* array */[]);
      }));

export {
  RotatableButton ,
  component$1 as component,
  make$1 as make,
  $$default ,
  $$default as default,
  
}
/* component Not a pure module */
